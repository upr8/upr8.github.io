{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-data-blog-bash-cheatsheet-index-en-mdx-14e7442586a26c68e942.js","mappings":"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","sources":["webpack://personal-web-site/./data/blog/bash-cheatsheet/index.en.mdx","webpack://personal-web-site/./src/templates/blog-post.tsx","webpack://personal-web-site/./src/components/tags/tag-list.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    p: \"p\",\n    h4: \"h4\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Table of contents\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-toc\"\n  }, \"# This code block gets replaced with the TOC\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Performance evaluation\"), \"\\n\", React.createElement(_components.h3, null, \"Runtime\"), \"\\n\", React.createElement(_components.p, null, \"One of the methods for scpecifying the runtime of an application (Program?) is to use SECONDS valriable.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"SECONDS=0; sleep 3; echo $SECONDS;\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Condition\"), \"\\n\", React.createElement(_components.h3, null, \"Conditional structure\"), \"\\n\", React.createElement(_components.p, null, \"The general structure of a conditional statement in Bash is as follows:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"val=14\\nif test $val -eq 14 ; then\\n    echo \\\"exit value of a command\\\"\\nelif (( $val + 6 > 20 )); then\\n    echo \\\"Mathematical expressions\\\"\\nelif [ $val -gt 10 ] ; then\\n    echo \\\"single bracket (POSIX standard)\\\"\\nelif [[ $val -gt 10 ]]; then\\n    echo \\\"double bracket (Bash and some others)\\\"\\nelse\\n    echo \\\"else condition\\\"\\nfi\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Comparison conditions\"), \"\\n\", React.createElement(_components.h4, null, \"File Operators\"), \"\\n\", React.createElement(_components.p, null, \"The conditional operators for checking the status of files are visible in the table below:\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"center\"\n  }, \"Operator\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"Example\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"Description\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-e\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-e $fileName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if a file exists.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-d\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-d $directoryName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if a file exists and it is a directory.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-f\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-f $fileName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if a file exists and it is a regular file.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-h\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-h $linkName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if a file exists and it is a symbolic link.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-r\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-r $fileName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if a file is readable.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-W\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-W $fileName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if a file is writable.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-X\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-X $fileName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if a file is executable.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-s\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.code, null, \"-S $fileName\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Checks if size of a file is non-zero.\")))), \"\\n\", React.createElement(_components.h4, null, \"String Operators\"), \"\\n\", React.createElement(_components.p, null, \"Conditional operators for comparing strings is visible in the table below:\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"center\"\n  }, \"Operator\"), React.createElement(_components.th, {\n    align: \"center\"\n  }, \"Example\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"Description\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-z\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-z $str\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if the length of the string is zero.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-n\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-n $str\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if the length of the string is not zero.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"==\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$str1 == $str2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if the two strings are the same.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"!=\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$str1 != $str2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if the two strings are not the same.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \">\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$str1 > $str2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if str1 is lexicographically greater than str2.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"<\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$str1 < $str2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if str1 is lexicographically less than str2.\")))), \"\\n\", React.createElement(_components.h4, null, \"Arithmatic Operators\"), \"\\n\", React.createElement(_components.p, null, \"Arithmatic comparisons can be performed using the following operators:\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"center\"\n  }, \"Operator\"), React.createElement(_components.th, {\n    align: \"center\"\n  }, \"Example\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"Description\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-eq\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$int1 -eq $int2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if int1 and int2 are equal.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-ne\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$int1 -ne $int2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if int1 and int2 are not equal.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-gt\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$int1 -gt $int2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if int1 is greater than int2.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-ge\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$int1 -ge $int2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if int1 is greater than or equal to int2.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-lt\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$int1 -lt $int2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if int1 is less than int2.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"-le\")), React.createElement(_components.td, {\n    align: \"center\"\n  }, React.createElement(_components.code, null, \"$int1 -le $int2\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Check if int1 is less than or equal to int2.\")))), \"\\n\", React.createElement(_components.h3, null, \"Conditional execution\"), \"\\n\", React.createElement(_components.p, null, \"If execution of the first command was successfull, the second command will be executed:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"true && echo \\\"this message should show\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"If a command encounters an error, another command will be executed:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"false || echo \\\"this message should show\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"If the previous command or function returned an error code, the next command will be executed:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"false\\n[[ $? -ne 0 ]] && echo \\\"this message should show\\\"\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Loops\"), \"\\n\", React.createElement(_components.p, null, \"The following two loops have the same functionality:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"for i in `seq 1 10`\\ndo\\n    echo \\\"\\\\$i is $i\\\"\\ndone\\n\\nfor s in foo bar baz\\ndo\\n    echo $s\\ndone\\n\\nfor (( i = 0; i < 10; i++ ))\\ndo\\n    echo \\\"\\\\$i is $i\\\"\\ndone\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Working with arrays\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"array=(zero one two three)\\necho \\\"${array[0]}\\\"          # shows the first element\\necho \\\"${array[-1]}\\\"         # shows the last element\\necho \\\"${array[@]}\\\"          # shows all elements\\necho \\\"${array[@]:1:2}\\\"      # shows two elements (:2), starting from element with index of 1 (which is the 2nd element (:1))\\narray[4]='fifth element'    # inserts an element at index 4\\necho \\\"${array[4]}\\\"\\narray+=('sixth')            # appends an element to array\\nunset -v 'array[2]'         # deletes element with index of 2 from array\\narray=(\\\"${array[@]}\\\")       # re-indexing an array\\necho \\\"${#array[@]}\\\"         # shows the length of array\\n\")), \"\\n\", React.createElement(_components.p, null, \"To add an element to index 3 of an array, use the following code:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"array=(\\\"${array[@]:0:2}\\\" '2.5' \\\"${array[@]:2}\\\")\\necho \\\"${array[2]}\\\" #output: new\\necho \\\"${array[@]}\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"Extract an array from a string(?):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"theStr=\\\"Zero,One,Two\\\"\\narray=(${theStr//,/ })\\necho ${array[0]}\\necho ${array[2]}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Reading elements of an array:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"array=(1 2 3 4)\\n# foreach loop\\nfor y in \\\"${array[@]}\\\"; do\\n    # act on $y\\n    echo \\\"$y\\\"\\ndone\\n\\n# for loop with index\\nfor ((idx=0; idx < ${#array[@]}; ++idx)); do\\n    # act on ${array[$idx]}\\n    echo \\\"${array[$idx]}\\\"\\ndone\\n\")), \"\\n\", React.createElement(_components.p, null, \"Recieving the output of a command as an array, and then reading that array using Foreach loop(?):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"array=($(tr ',' ' ' <<<\\\"0,1,2,3,4\\\"))\\nfor y in \\\"${array[@]}\\\"; do\\n    echo \\\"$y\\\"\\ndone\\n\")), \"\\n\", React.createElement(_components.p, null, \"Filling an array based on the output of a command:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"while read -r; do\\n    #array+=(\\\"$REPLY\\\")     # Array append\\n    array[$i]=\\\"$REPLY\\\"     # Assignment by index\\n    let i++                # Increment index\\ndone < <(seq 1 10)  # command substitution\\necho ${array[@]}    # output: 1 2 3 4 5 6 7 8 9 10\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Working with Map (Associative Array)\"), \"\\n\", React.createElement(_components.p, null, \"The first step is to create a \", React.createElement(_components.em, null, \"map\"), \"(?):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"declare -A mp       # declare (This line is mandatory)\\nmp[hello]=world     # insert\\nmp[\\\"a long key\\\"]=v  # insert with a long key\\necho ${mp[hello]}   # access\\necho \\\"${!mp[@]}\\\"    # access all keys\\necho \\\"${mp[@]}\\\"     # access all values\\necho \\\"${#mp[@]}\\\"    # count of elements in a map\\n\\nfor key in \\\"${!mp[@]}\\\"; do # Iterate Over map\\n    echo \\\"Key:   ${key}\\\"\\n    echo \\\"Value: ${mp[$key]}\\\"\\ndone\\n\\nunset mp            # destroy a map/array\\n\")), \"\\n\", React.createElement(_components.h2, null, \"working with file:\"), \"\\n\", React.createElement(_components.p, null, \"Reading a file line by line and converting it into an array:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"IFS=$'\\\\n' read -r -a arr < file\\n\")), \"\\n\", React.createElement(_components.p, null, \"Reading an entire file until reaching an empty line:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"while read line || [ -n \\\"$line\\\" ]; do\\n    echo $line\\ndone < file\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Processing input parameters\"), \"\\n\", React.createElement(_components.p, null, \"If no parameter is passed to \", React.createElement(_components.em, null, \"for\"), \" loop, it will be executed on the input file.\\nThe following two loops have the same results:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"for arg; do\\n    echo arg=$arg\\ndone\\n\\nfor arg in \\\"$@\\\"; do\\n    echo arg=$arg\\ndone\\n\")), \"\\n\", React.createElement(_components.p, null, \"The following code from \", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/a/16496491\"\n  }, \"stackoverflow\"), \" demonstrates various\\nuse casess for utilizing \", React.createElement(_components.em, null, \"getopts\"), \" for processing input parameters:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"#!/bin/bash\\nusage() { echo \\\"Usage: $0 [-s <45|90>] [-p <string>]\\\" 1>&2; exit 1; }\\n\\nwhile getopts \\\":s:p:\\\" o; do\\n    case \\\"${o}\\\" in\\n        s)\\n            s=${OPTARG}\\n            ((s == 45 || s == 90)) || usage\\n            ;;\\n        p)\\n            p=${OPTARG}\\n            ;;\\n        *)\\n            usage\\n            ;;\\n    esac\\ndone\\nshift $((OPTIND-1))\\n\\nif [ -z \\\"${s}\\\" ] || [ -z \\\"${p}\\\" ]; then\\n    usage\\nfi\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/upr8.github.io/upr8.github.io/data/blog/bash-cheatsheet/index.en.mdx\";\nimport * as React from \"react\";\nimport MdxContainer from \"@/components/mdx-container\";\nimport Layout from \"@/components/layout\";\nimport {TagList} from \"@/components/tags\";\nexport {Head} from \"@/components/gatsby-head\";\nconst BlogPostTemplate = _ref => {\n  var _data$mdx, _data$mdx$fields, _data$mdx2, _data$mdx2$fields;\n  let {data, pageContext, children} = _ref;\n  return React.createElement(Layout, {\n    pageContext: pageContext\n  }, React.createElement(MdxContainer, null, children), ((_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$fields = _data$mdx.fields) === null || _data$mdx$fields === void 0 ? void 0 : _data$mdx$fields.slugTagList) && React.createElement(\"div\", {\n    className: \"mt-32\"\n  }, React.createElement(\"p\", {\n    className: \"mt-8 text-center text-secondary\"\n  }, \"Tags of this Post:\"), React.createElement(TagList, {\n    tags: (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : (_data$mdx2$fields = _data$mdx2.fields) === null || _data$mdx2$fields === void 0 ? void 0 : _data$mdx2$fields.slugTagList\n  })));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"1902809261\";\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\ninterface Props {\n\ttags: readonly ({\n\t\treadonly tag: string | null;\n\t\treadonly slug: string | null;\n\t} | null)[];\n\tisCenter?: boolean;\n}\n\nconst TagList: React.FC<Props> = ({ tags, isCenter = true }) => {\n\treturn (\n\t\t<ul\n\t\t\tclassName={`flex flex-wrap items-baseline mt-2 ms-1 md:mt-0 ${\n\t\t\t\tisCenter ? \"justify-center\" : \"justify-start\"\n\t\t\t}`}\n\t\t>\n\t\t\t{tags?.map((tag) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={tag?.tag}\n\t\t\t\t\tclassName=\"z-10 inline-block px-2 m-1 text-sm border-2 rounded-full shadow-sm bg-nav text-primary\"\n\t\t\t\t>\n\t\t\t\t\t<Link to={`${tag?.slug}`}>#{tag?.tag}</Link>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default TagList;\n\nexport const query = graphql`\n    fragment Tags on MdxFields {\n        slugTagList {\n            tag\n            slug\n        }\n    }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","h3","p","h4","table","thead","tr","th","tbody","td","em","a","_provideComponents","components","React","className","align","href","wrapper","MDXLayout","BlogPostTemplate","_ref","_data$mdx","_data$mdx$fields","_data$mdx2","_data$mdx2$fields","data","pageContext","children","Layout","MdxContainer","mdx","fields","slugTagList","TagList","tags","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","isCenter","map","tag","key","Link","to","slug"],"sourceRoot":""}