{"version":3,"file":"component---src-templates-blog-index-tsx-6991a6667a32979d87b8.js","mappings":"6JAgCA,IAvBsCA,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAEC,GAAUP,EAAA,OAClDQ,EAAAA,cAAA,OAAKC,UAAU,iCACdD,EAAAA,cAAA,WACCA,EAAAA,cAAA,KAAGC,UAAU,mDACS,QADwCR,EAC5DM,EAASG,mBAAW,IAAAT,OAAA,EAApBA,EAAsBU,OAGzBH,EAAAA,cAAA,OAAKC,UAAU,aACdD,EAAAA,cAACI,EAAAA,KAAI,CAACC,IAAmB,QAAfX,EAAAK,EAASO,cAAM,IAAAZ,OAAA,EAAfA,EAAiBa,OAAQ,KAClCP,EAAAA,cAAA,OAAKC,UAAU,sCACO,QAD6BN,EACjDI,EAASG,mBAAW,IAAAP,OAAA,EAApBA,EAAsBa,QAGzBR,EAAAA,cAAA,OAAKC,UAAU,IACdD,EAAAA,cAAA,KAAGC,UAAU,kBAAsC,QAAtBL,EAAEG,EAASG,mBAAW,IAAAN,OAAA,EAApBA,EAAsBa,OACrC,QAAfZ,EAAAE,EAASO,cAAM,IAAAT,OAAA,EAAfA,EAAiBa,cACjBV,EAAAA,cAACW,EAAAA,EAAO,CAACC,KAAqB,QAAjBd,EAAEC,EAASO,cAAM,IAAAR,OAAA,EAAfA,EAAiBY,YAAaG,UAAU,MAIrD,C,+ECvBA,MAAMC,EAAgCtB,IAEtC,IADNuB,aAAa,KAAEC,EAAI,MAAER,IACrBhB,EACA,OACCQ,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAAA,QAAMgB,KAAMA,EAAMC,KAAKC,EAAAA,EAAAA,IAAqBF,KAC5ChB,EAAAA,cAAA,aAAQQ,GACN,C,+ECiBL,MAnBiChB,IAAgC,IAA/B,KAAEoB,EAAI,SAAEC,GAAW,GAAMrB,EAC1D,OACCQ,EAAAA,cAAA,MACCC,UAAW,oDACVY,EAAW,iBAAmB,kBAG9BD,aAAI,EAAJA,EAAMO,KAAKC,GACXpB,EAAAA,cAAA,MACCqB,IAAKD,aAAG,EAAHA,EAAKA,IACVnB,UAAU,0FAEVD,EAAAA,cAACI,EAAAA,KAAI,CAACC,GAAI,GAAGe,aAAG,EAAHA,EAAKb,QAAQ,IAAEa,aAAG,EAAHA,EAAKA,QAG/B,C,+GCCP,UAd2C5B,IAA2B,IAA1B,KAAE8B,EAAI,YAAEP,GAAavB,EAChE,OACCQ,EAAAA,cAACuB,EAAAA,EAAM,CAACR,YAAaA,GACpBf,EAAAA,cAAA,eACCA,EAAAA,cAAA,eACEsB,EAAKE,OAAOC,MAAMN,KAAIO,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAC/B1B,EAAAA,cAAC4B,EAAAA,EAAQ,CAACP,IAAKM,EAAKE,GAAI9B,SAAU4B,GAAQ,MAIrC,C","sources":["webpack://personal-web-site/./src/components/cards/blog-post-card.tsx","webpack://personal-web-site/./src/components/gatsby-head/index.tsx","webpack://personal-web-site/./src/components/tags/tag-list.tsx","webpack://personal-web-site/./src/templates/blog-index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport { TagList } from \"@/components/tags\";\n\ninterface Props {\n\tBlogNode: Queries.BlogNodeFragment;\n}\n\nconst BlogPostCard: React.FC<Props> = ({ BlogNode }) => (\n\t<div className=\"mt-8 md:flex md:items-center \">\n\t\t<div>\n\t\t\t<p className=\"inline-block pt-2 text-sm italic text-secondary\">\n\t\t\t\t{BlogNode.frontmatter?.date}\n\t\t\t</p>\n\t\t</div>\n\t\t<div className=\"ps-6 pe-6\">\n\t\t\t<Link to={BlogNode.fields?.slug || \"#\"}>\n\t\t\t\t<div className=\"text-xl font-semibold text-primary\">\n\t\t\t\t\t{BlogNode.frontmatter?.title}\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t\t<div className=\"\">\n\t\t\t\t<p className=\"text-secondary\">{BlogNode.frontmatter?.desc}</p>\n\t\t\t\t{BlogNode.fields?.slugTagList && (\n\t\t\t\t\t<TagList tags={BlogNode.fields?.slugTagList} isCenter={false} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nexport default BlogPostCard;\n\nexport const query = graphql`\n    fragment BlogNode on Mdx {\n        id\n        frontmatter {\n            title\n            date(formatString: \"YYYY/MM/DD\")\n            lang\n            desc\n        }\n        fields {\n            slug\n            ...Tags\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { HeadFC } from \"gatsby\";\nimport { PageContext } from \"@/gatsby/types\";\nimport { getDirectionFromLang } from \"@/utils\";\n\n// biome-ignore lint/complexity/noBannedTypes: nothing but PageContext\nexport const Head: HeadFC<{}, PageContext> = ({\n\tpageContext: { lang, title },\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<html lang={lang} dir={getDirectionFromLang(lang)} />\n\t\t\t<title>{title}</title>\n\t\t</>\n\t);\n};\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\ninterface Props {\n\ttags: readonly ({\n\t\treadonly tag: string | null;\n\t\treadonly slug: string | null;\n\t} | null)[];\n\tisCenter?: boolean;\n}\n\nconst TagList: React.FC<Props> = ({ tags, isCenter = true }) => {\n\treturn (\n\t\t<ul\n\t\t\tclassName={`flex flex-wrap items-baseline mt-2 ms-1 md:mt-0 ${\n\t\t\t\tisCenter ? \"justify-center\" : \"justify-start\"\n\t\t\t}`}\n\t\t>\n\t\t\t{tags?.map((tag) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={tag?.tag}\n\t\t\t\t\tclassName=\"z-10 inline-block px-2 m-1 text-sm border-2 rounded-full shadow-sm bg-nav text-primary\"\n\t\t\t\t>\n\t\t\t\t\t<Link to={`${tag?.slug}`}>#{tag?.tag}</Link>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default TagList;\n\nexport const query = graphql`\n    fragment Tags on MdxFields {\n        slugTagList {\n            tag\n            slug\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { PageProps, graphql } from \"gatsby\";\nimport Layout from \"@/components/layout\";\nimport { PageContext } from \"@/gatsby/types\";\nimport BlogCard from \"@/components/cards/blog-post-card\";\n\nexport { Head } from \"@/components/gatsby-head\";\n\ninterface Props extends PageProps {\n\tdata: Queries.Query;\n\tpageContext: PageContext;\n}\n\nconst BlogIndexTemplate: React.FC<Props> = ({ data, pageContext }) => {\n\treturn (\n\t\t<Layout pageContext={pageContext}>\n\t\t\t<article>\n\t\t\t\t<section>\n\t\t\t\t\t{data.allMdx.edges.map(({ node }) => (\n\t\t\t\t\t\t<BlogCard key={node.id} BlogNode={node} />\n\t\t\t\t\t))}\n\t\t\t\t</section>\n\t\t\t</article>\n\t\t</Layout>\n\t);\n};\n\nexport default BlogIndexTemplate;\n\nexport const query = graphql`\n    query {\n        allMdx(\n\t\t\tfilter: {\n\t\t\t\tfrontmatter: {\n\t\t\t\t\tpublished: {eq: true},\n\t\t\t\t\ttype: {eq: \"blog\"}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tsort: {frontmatter: {date: DESC}}\n\t\t\t) {\n            totalCount\n            edges {\n                node {\n                    ...BlogNode\n                }\n            }\n        }\n    }\n`;\n"],"names":["_ref","_BlogNode$frontmatter","_BlogNode$fields","_BlogNode$frontmatter2","_BlogNode$frontmatter3","_BlogNode$fields2","_BlogNode$fields3","BlogNode","React","className","frontmatter","date","Link","to","fields","slug","title","desc","slugTagList","TagList","tags","isCenter","Head","pageContext","lang","dir","getDirectionFromLang","map","tag","key","data","Layout","allMdx","edges","_ref2","node","BlogCard","id"],"sourceRoot":""}