"use strict";(self.webpackChunkpersonal_web_site=self.webpackChunkpersonal_web_site||[]).push([[25],{8562:function(e,t,n){n.r(t),n.d(t,{Head:function(){return h.F},default:function(){return u}});var a=n(1151),l=n(7294);function r(e){const t=Object.assign({h2:"h2",a:"a",span:"span",h3:"h3",p:"p",pre:"pre",code:"code",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",em:"em"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.h2,{id:"performance-evaluation",style:{position:"relative"}},"Performance evaluation",l.createElement(t.a,{href:"#performance-evaluation","aria-label":"performance evaluation permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.h3,{id:"runtime",style:{position:"relative"}},"Runtime",l.createElement(t.a,{href:"#runtime","aria-label":"runtime permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"One of the methods for scpecifying the runtime of an application (Program?) is to use SECONDS valriable."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"SECONDS=0; sleep 3; echo $SECONDS;\n")),"\n",l.createElement(t.h2,{id:"condition",style:{position:"relative"}},"Condition",l.createElement(t.a,{href:"#condition","aria-label":"condition permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.h3,{id:"conditional-structure",style:{position:"relative"}},"Conditional structure",l.createElement(t.a,{href:"#conditional-structure","aria-label":"conditional structure permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"The general structure of a conditional statement in Bash is as follows:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'val=14\nif test $val -eq 14 ; then\n    echo "exit value of a command"\nelif (( $val + 6 > 20 )); then\n    echo "Mathematical expressions"\nelif [ $val -gt 10 ] ; then\n    echo "single bracket (POSIX standard)"\nelif [[ $val -gt 10 ]]; then\n    echo "double bracket (Bash and some others)"\nelse\n    echo "else condition"\nfi\n')),"\n",l.createElement(t.h3,{id:"comparison-conditions",style:{position:"relative"}},"Comparison conditions",l.createElement(t.a,{href:"#comparison-conditions","aria-label":"comparison conditions permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.h4,{id:"file-operators",style:{position:"relative"}},"File Operators",l.createElement(t.a,{href:"#file-operators","aria-label":"file operators permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"The conditional operators for checking the status of files are visible in the table below:"),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,{align:"center"},"Operator"),l.createElement(t.th,{align:"left"},"Example"),l.createElement(t.th,{align:"left"},"Description"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-e")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-e $fileName")),l.createElement(t.td,{align:"left"},"Checks if a file exists.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-d")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-d $directoryName")),l.createElement(t.td,{align:"left"},"Checks if a file exists and it is a directory.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-f")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-f $fileName")),l.createElement(t.td,{align:"left"},"Checks if a file exists and it is a regular file.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-h")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-h $linkName")),l.createElement(t.td,{align:"left"},"Checks if a file exists and it is a symbolic link.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-r")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-r $fileName")),l.createElement(t.td,{align:"left"},"Checks if a file is readable.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-W")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-W $fileName")),l.createElement(t.td,{align:"left"},"Checks if a file is writable.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-X")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-X $fileName")),l.createElement(t.td,{align:"left"},"Checks if a file is executable.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-s")),l.createElement(t.td,{align:"left"},l.createElement(t.code,null,"-S $fileName")),l.createElement(t.td,{align:"left"},"Checks if size of a file is non-zero.")))),"\n",l.createElement(t.h4,{id:"string-operators",style:{position:"relative"}},"String Operators",l.createElement(t.a,{href:"#string-operators","aria-label":"string operators permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"Conditional operators for comparing strings is visible in the table below:"),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,{align:"center"},"Operator"),l.createElement(t.th,{align:"center"},"Example"),l.createElement(t.th,{align:"left"},"Description"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-z")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-z $str")),l.createElement(t.td,{align:"left"},"Check if the length of the string is zero.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-n")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-n $str")),l.createElement(t.td,{align:"left"},"Check if the length of the string is not zero.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"==")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$str1 == $str2")),l.createElement(t.td,{align:"left"},"Check if the two strings are the same.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"!=")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$str1 != $str2")),l.createElement(t.td,{align:"left"},"Check if the two strings are not the same.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,">")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$str1 > $str2")),l.createElement(t.td,{align:"left"},"Check if str1 is lexicographically greater than str2.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"<")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$str1 < $str2")),l.createElement(t.td,{align:"left"},"Check if str1 is lexicographically less than str2.")))),"\n",l.createElement(t.h4,{id:"arithmatic-operators",style:{position:"relative"}},"Arithmatic Operators",l.createElement(t.a,{href:"#arithmatic-operators","aria-label":"arithmatic operators permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"Arithmatic comparisons can be performed using the following operators:"),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,{align:"center"},"Operator"),l.createElement(t.th,{align:"center"},"Example"),l.createElement(t.th,{align:"left"},"Description"))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-eq")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$int1 -eq $int2")),l.createElement(t.td,{align:"left"},"Check if int1 and int2 are equal.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-ne")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$int1 -ne $int2")),l.createElement(t.td,{align:"left"},"Check if int1 and int2 are not equal.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-gt")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$int1 -gt $int2")),l.createElement(t.td,{align:"left"},"Check if int1 is greater than int2.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-ge")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$int1 -ge $int2")),l.createElement(t.td,{align:"left"},"Check if int1 is greater than or equal to int2.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-lt")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$int1 -lt $int2")),l.createElement(t.td,{align:"left"},"Check if int1 is less than int2.")),l.createElement(t.tr,null,l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"-le")),l.createElement(t.td,{align:"center"},l.createElement(t.code,null,"$int1 -le $int2")),l.createElement(t.td,{align:"left"},"Check if int1 is less than or equal to int2.")))),"\n",l.createElement(t.h3,{id:"conditional-execution",style:{position:"relative"}},"Conditional execution",l.createElement(t.a,{href:"#conditional-execution","aria-label":"conditional execution permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"If execution of the first command was successfull, the second command will be executed:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'true && echo "this message should show"\n')),"\n",l.createElement(t.p,null,"If a command encounters an error, another command will be executed:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'false || echo "this message should show"\n')),"\n",l.createElement(t.p,null,"If the previous command or function returned an error code, the next command will be executed:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'false\n[[ $? -ne 0 ]] && echo "this message should show"\n')),"\n",l.createElement(t.h2,{id:"loops",style:{position:"relative"}},"Loops",l.createElement(t.a,{href:"#loops","aria-label":"loops permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"The following two loops have the same functionality:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'for i in `seq 1 10`\ndo\n    echo "\\$i is $i"\ndone\n\nfor s in foo bar baz\ndo\n    echo $s\ndone\n\nfor (( i = 0; i < 10; i++ ))\ndo\n    echo "\\$i is $i"\ndone\n')),"\n",l.createElement(t.h2,{id:"working-with-arrays",style:{position:"relative"}},"Working with arrays",l.createElement(t.a,{href:"#working-with-arrays","aria-label":"working with arrays permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'array=(zero one two three)\necho "${array[0]}"          # shows the first element\necho "${array[-1]}"         # shows the last element\necho "${array[@]}"          # shows all elements\necho "${array[@]:1:2}"      # shows two elements (:2), starting from element with index of 1 (which is the 2nd element (:1))\narray[4]=\'fifth element\'    # inserts an element at index 4\necho "${array[4]}"\narray+=(\'sixth\')            # appends an element to array\nunset -v \'array[2]\'         # deletes element with index of 2 from array\narray=("${array[@]}")       # re-indexing an array\necho "${#array[@]}"         # shows the length of array\n')),"\n",l.createElement(t.p,null,"To add an element to index 3 of an array, use the following code:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'array=("${array[@]:0:2}" \'2.5\' "${array[@]:2}")\necho "${array[2]}" #output: new\necho "${array[@]}"\n')),"\n",l.createElement(t.p,null,"Extract an array from a string(?):"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'theStr="Zero,One,Two"\narray=(${theStr//,/ })\necho ${array[0]}\necho ${array[2]}\n')),"\n",l.createElement(t.p,null,"Reading elements of an array:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'array=(1 2 3 4)\n# foreach loop\nfor y in "${array[@]}"; do\n    # act on $y\n    echo "$y"\ndone\n\n# for loop with index\nfor ((idx=0; idx < ${#array[@]}; ++idx)); do\n    # act on ${array[$idx]}\n    echo "${array[$idx]}"\ndone\n')),"\n",l.createElement(t.p,null,"Recieving the output of a command as an array, and then reading that array using Foreach loop(?):"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'array=($(tr \',\' \' \' <<<"0,1,2,3,4"))\nfor y in "${array[@]}"; do\n    echo "$y"\ndone\n')),"\n",l.createElement(t.p,null,"Filling an array based on the output of a command:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'while read -r; do\n    #array+=("$REPLY")     # Array append\n    array[$i]="$REPLY"     # Assignment by index\n    let i++                # Increment index\ndone < <(seq 1 10)  # command substitution\necho ${array[@]}    # output: 1 2 3 4 5 6 7 8 9 10\n')),"\n",l.createElement(t.h2,{id:"working-with-map-associative-array",style:{position:"relative"}},"Working with Map (Associative Array)",l.createElement(t.a,{href:"#working-with-map-associative-array","aria-label":"working with map associative array permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"The first step is to create a ",l.createElement(t.em,null,"map"),"(?):"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'declare -A mp       # declare (This line is mandatory)\nmp[hello]=world     # insert\nmp["a long key"]=v  # insert with a long key\necho ${mp[hello]}   # access\necho "${!mp[@]}"    # access all keys\necho "${mp[@]}"     # access all values\necho "${#mp[@]}"    # count of elements in a map\n\nfor key in "${!mp[@]}"; do # Iterate Over map\n    echo "Key:   ${key}"\n    echo "Value: ${mp[$key]}"\ndone\n\nunset mp            # destroy a map/array\n')),"\n",l.createElement(t.h2,{id:"working-with-file",style:{position:"relative"}},"working with file:",l.createElement(t.a,{href:"#working-with-file","aria-label":"working with file permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"Reading a file line by line and converting it into an array:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"IFS=$'\\n' read -r -a arr < file\n")),"\n",l.createElement(t.p,null,"Reading an entire file until reaching an empty line:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'while read line || [ -n "$line" ]; do\n    echo $line\ndone < file\n')),"\n",l.createElement(t.h2,{id:"processing-input-parameters",style:{position:"relative"}},"Processing input parameters",l.createElement(t.a,{href:"#processing-input-parameters","aria-label":"processing input parameters permalink",className:"autolink-hdrs after"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" height="20" version="1.1" viewBox="0 0 16 16" width="20"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}}))),"\n",l.createElement(t.p,null,"If no parameter is passed to ",l.createElement(t.em,null,"for")," loop, it will be executed on the input file.\nThe following two loops have the same results:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'for arg; do\n    echo arg=$arg\ndone\n\nfor arg in "$@"; do\n    echo arg=$arg\ndone\n')),"\n",l.createElement(t.p,null,"The following code from ",l.createElement(t.a,{href:"https://stackoverflow.com/a/16496491"},"stackoverflow")," demonstrates various\nuse casess for utilizing ",l.createElement(t.em,null,"getopts")," for processing input parameters:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'#!/bin/bash\nusage() { echo "Usage: $0 [-s <45|90>] [-p <string>]" 1>&2; exit 1; }\n\nwhile getopts ":s:p:" o; do\n    case "${o}" in\n        s)\n            s=${OPTARG}\n            ((s == 45 || s == 90)) || usage\n            ;;\n        p)\n            p=${OPTARG}\n            ;;\n        *)\n            usage\n            ;;\n    esac\ndone\nshift $((OPTIND-1))\n\nif [ -z "${s}" ] || [ -z "${p}" ]; then\n    usage\nfi\n')))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},i=n(6053),o=n(8890),s=n(6587),m=n(6746),h=n(8071);const d=e=>{var t,n,a,r,c,h;let{data:d,pageContext:u,children:E}=e;const{enableTableOfContents:g}=(0,m.$)(),p=g&&null!==(t=d.mdx)&&void 0!==t&&t.tableOfContents?{TableOfContents:null===(n=d.mdx)||void 0===n?void 0:n.tableOfContents}:{};return l.createElement(o.Z,{pageContext:u},l.createElement(i.Z,p,E),(null===(a=d.mdx)||void 0===a||null===(r=a.fields)||void 0===r?void 0:r.slugTagList)&&l.createElement("div",{className:"mt-32"},l.createElement("p",{className:"mt-8 text-center text-secondary"},"Tags of this Post:"),l.createElement(s.P,{tags:null===(c=d.mdx)||void 0===c||null===(h=c.fields)||void 0===h?void 0:h.slugTagList})))};function u(e){return l.createElement(d,e,l.createElement(c,e))}},6587:function(e,t,n){n.d(t,{P:function(){return r}});var a=n(7294),l=n(2811);var r=e=>{let{tags:t,isCenter:n=!0}=e;return a.createElement("ul",{className:"flex flex-wrap items-baseline mt-2 ms-1 md:mt-0 "+(n?"justify-center":"justify-start")},null==t?void 0:t.map((e=>a.createElement("li",{key:null==e?void 0:e.tag,className:"z-10 inline-block px-2 m-1 text-sm border-2 rounded-full shadow-sm bg-nav text-primary"},a.createElement(l.Link,{to:""+(null==e?void 0:e.slug)},"#",null==e?void 0:e.tag)))))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-tsx-content-file-path-data-blog-bash-cheatsheet-index-en-mdx-d22d90816be8a636f1e1.js.map